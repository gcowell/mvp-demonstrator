name: Primary Pipeline

on:  
  push:   
    branches:  
    - master   

jobs:  
  get_updated_microservices:
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install Node.js Dependencies 
        run: |
          git fetch origin master
          npm install
      - name: Get Affected Services
        id: set-affected
        run: |
          nx_output=$(npx nx print-affected)
          affected=$(jq -r '.projects' <<< "$nx_output")
          echo "::set-output name=affected::$affected"
    outputs:
      affected: ${{ steps.set-affected.outputs.affected }}


  deploy_microservices:
    needs: get_updated_microservices
    runs-on: ubuntu-latest  
    if: ${{ needs.get_updated_microservices.outputs.affected != '[]' && needs.get_updated_microservices.outputs.affected != '' }}
    strategy:
      matrix:
        services: ${{ fromJson(needs.get_updated_microservices.outputs.affected) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials  
        uses: aws-actions/configure-aws-credentials@v1 
        with:
          role-to-assume: arn:aws:iam::202422821117:role/github
          role-session-name: github-pipeline-session
          aws-region: eu-west-2 
      - name: Deploy Lambda
        run: |
          zip -j deploy.zip ./microservices/${{ matrix.services }}/* 
          aws lambda update-function-code --function-name=${{ matrix.services }} --zip-file=fileb://deploy.zip 
  
